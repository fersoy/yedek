{"ast":null,"code":"var _jsxFileName = \"/Users/fatihersoy/Desktop/electroScribe/src/components/Patients/Patients.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Particles from 'react-particles-js';\nimport { Z_FIXED } from 'zlib';\nconst particalOpt = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 1000\n      },\n      position: fixed\n    }\n  }\n};\n\nclass Patients extends Component {\n  constructor() {\n    super(); // Create a state object\n\n    this.state = {\n      // Set patients to an empty array. You will have to use the same method when you are pulling in drugs, conditions and providers as well.\n      patients: []\n    };\n  } // Create a componentWillMount lifecycle method\n\n\n  componentWillMount() {\n    // This will go to the backend and retrieve the info from LB API\n    this.getPatients();\n  } // Create a new method getPatients to make an axios request\n\n\n  getPatients() {\n    axios.get('http://localhost:3000/api/patients').then(response => {\n      // Setting the patients state object to the response\n      this.setState({\n        patients: response.data\n      }, () => {\n        console.log(this.state);\n      });\n    }).catch(err => console.log(err));\n  } // Render is a lifecyle method\n\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"patientsBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"v-header container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fullscreen-video-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      params: particalOpt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        fontFamily: \"Arial, Helvetica, sans-serif\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Patients\"), React.createElement(\"div\", {\n      className: \"fixed-action-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/patients/add\",\n      className: \"btn-floating btn-large red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Date of Birth\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Cell Number\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.patients.map((patient, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/patients/\".concat(patient.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, patient.pt_name)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, patient.pt_dob), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, patient.pt_cell));\n    }))))));\n  }\n\n}\n\nexport default Patients;","map":{"version":3,"sources":["/Users/fatihersoy/Desktop/electroScribe/src/components/Patients/Patients.js"],"names":["React","Component","Link","axios","Particles","Z_FIXED","particalOpt","particles","number","value","density","enable","value_area","position","fixed","Patients","constructor","state","patients","componentWillMount","getPatients","get","then","response","setState","data","console","log","catch","err","render","fontFamily","map","patient","i","id","pt_name","pt_dob","pt_cell"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Particles from 'react-particles-js';\nimport { Z_FIXED } from 'zlib';\n\nconst particalOpt = {\n    particles: {\n        number: {\n            value: 150,\n            density: {\n                enable: true,\n                value_area: 1000\n\n            },\n            position: fixed\n        }\n    }\n}\n\n\n\nclass Patients extends Component {\n    constructor() {\n        super();\n        // Create a state object\n        this.state = {\n            // Set patients to an empty array. You will have to use the same method when you are pulling in drugs, conditions and providers as well.\n            patients: []\n        }\n    }\n\n    // Create a componentWillMount lifecycle method\n    componentWillMount() {\n        // This will go to the backend and retrieve the info from LB API\n        this.getPatients();\n    }\n\n    // Create a new method getPatients to make an axios request\n    getPatients() {\n        axios.get('http://localhost:3000/api/patients')\n            .then(response => {\n                // Setting the patients state object to the response\n                this.setState({ patients: response.data }, () => {\n                    console.log(this.state);\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    // Render is a lifecyle method\n    render() {\n        return (\n            <div id=\"patientsBody\">\n                <header className=\"v-header container\">\n                    <div className=\"fullscreen-video-wrap\">\n\n                        <Particles\n                            params={particalOpt}\n                        />\n                    </div>\n                </header>\n                <div>\n\n\n                    <div>\n                        <h1 style={{ fontFamily: \"Arial, Helvetica, sans-serif\" }}>Patients</h1>\n                        <div className=\"fixed-action-button\">\n                            <Link to=\"/patients/add\" className=\"btn-floating btn-large red\">\n                                <i className=\"fa fa-plus\"></i>\n                            </Link>\n                            <br />\n                            <br />\n                        </div>\n                        <table className=\"highlight\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Date of Birth</th>\n                                    <th>Cell Number</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.patients.map((patient, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>\n                                                <Link to={`/patients/${patient.id}`}>\n                                                    {patient.pt_name}</Link>\n                                            </td>\n                                            <td>{patient.pt_dob}</td>\n                                            <td>{patient.pt_cell}</td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div >\n\n            </div >\n        )\n    }\n}\n\nexport default Patients;\n"]},"metadata":{},"sourceType":"module"}