{"ast":null,"code":"var _jsxFileName = \"/Users/fatihersoy/Desktop/electroScribe/src/components/Patients/AddPatients.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Patients.css';\n\nclass AddPatient extends Component {\n  // Creating an addPatient method to take in the newPatient object w/ the form data\n  addPatient(newPatient) {\n    //console.log(newPatient)\n    // Making a POST request thru axios\n    axios.request({\n      method: 'POST',\n      url: 'http://localhost:3000/api/patients',\n      data: newPatient\n    }).then(response => {\n      // Redirecting to patients page\n      this.props.history.push('/patients');\n    }).catch(err => console.log(err));\n  }\n\n  // Creating an onSubmit method that takes in \"e\" or event which is the input from the form and stores it in newPatient object. \n  onSubmit(e) {\n    //console.log(this.refs.name.value);\n    // Making sure to create an array of object [{}] since this is the format the API accepts POST requests\n    const newPatient = [{\n      pt_name: this.refs.pt_name.value,\n      pt_email: this.refs.pt_email.value,\n      pt_cell: this.refs.pt_cell.value,\n      pt_gender: this.refs.pt_gender.value,\n      pt_dob: this.refs.pt_dob.value\n    }]; // Adds the newPatient object using the addPatient method created above. \n\n    this.addPatient(newPatient);\n    e.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"btn grey\",\n      to: \"/patients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Add Patient\"), React.createElement(\"form\", {\n      className: \"col s12\",\n      onSubmit: this.onSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_name\",\n      ref: \"pt_name\",\n      placeholder: \"John Doe\",\n      id: \"pt_name\",\n      type: \"text\",\n      className: \"validate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        color: \"black\",\n        fontWeight: 'bold'\n      },\n      className: \"active\",\n      htmlFor: \"pt_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Name\")), React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_email\",\n      ref: \"pt_email\",\n      placeholder: \"john.doe@test.com\",\n      id: \"pt_email\",\n      type: \"text\",\n      className: \"validate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        color: \"black\",\n        fontWeight: 'bold'\n      },\n      className: \"active\",\n      htmlFor: \"pt_email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Email\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_cell\",\n      ref: \"pt_cell\",\n      placeholder: \"346-252-3365\",\n      id: \"pt_cell\",\n      type: \"text\",\n      className: \"validate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        color: \"black\",\n        fontWeight: 'bold'\n      },\n      className: \"active\",\n      htmlFor: \"pt_cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Cell\"), React.createElement(\"span\", {\n      className: \"helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Cell number must be in XXX-XXX-XXXX format\")), React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_gender\",\n      ref: \"pt_gender\",\n      placeholder: \"Male\",\n      id: \"pt_gender\",\n      type: \"text\",\n      className: \"validate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        color: \"black\",\n        fontWeight: 'bold'\n      },\n      className: \"active\",\n      htmlFor: \"pt_gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Gender\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_dob\",\n      ref: \"pt_dob\",\n      placeholder: \"1994-01-01\",\n      id: \"pt_dob\",\n      type: \"text\",\n      className: \"validate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        color: \"black\",\n        fontWeight: 'bold'\n      },\n      className: \"active\",\n      htmlFor: \"pt_dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Date of Birth\"), React.createElement(\"span\", {\n      className: \"helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Date must be in YYYY-MM-DD format\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn waves-effect waves-light\",\n      type: \"submit\",\n      value: \"Save\",\n      name: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Add Patient\"))));\n  }\n\n}\n\nexport default AddPatient;","map":{"version":3,"sources":["/Users/fatihersoy/Desktop/electroScribe/src/components/Patients/AddPatients.js"],"names":["React","Component","Link","axios","AddPatient","addPatient","newPatient","request","method","url","data","then","response","props","history","push","catch","err","console","log","onSubmit","e","pt_name","refs","value","pt_email","pt_cell","pt_gender","pt_dob","preventDefault","render","bind","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Patients.css';\nclass AddPatient extends Component {\n    // Creating an addPatient method to take in the newPatient object w/ the form data\n    addPatient(newPatient) {\n        //console.log(newPatient)\n        // Making a POST request thru axios\n        axios.request({\n            method: 'POST',\n            url: 'http://localhost:3000/api/patients',\n            data: newPatient\n        }).then(response => {\n            // Redirecting to patients page\n            this.props.history.push('/patients');\n        }).catch(err => console.log(err));\n    };\n\n    // Creating an onSubmit method that takes in \"e\" or event which is the input from the form and stores it in newPatient object. \n    onSubmit(e) {\n        //console.log(this.refs.name.value);\n        // Making sure to create an array of object [{}] since this is the format the API accepts POST requests\n        const newPatient = [{\n            pt_name: this.refs.pt_name.value,\n            pt_email: this.refs.pt_email.value,\n            pt_cell: this.refs.pt_cell.value,\n            pt_gender: this.refs.pt_gender.value,\n            pt_dob: this.refs.pt_dob.value\n        }]\n        // Adds the newPatient object using the addPatient method created above. \n        this.addPatient(newPatient);\n        e.preventDefault();\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                <Link className=\"btn grey\" to=\"/patients\">Back</Link>\n                <h1>Add Patient</h1>\n                <form className=\"col s12\" onSubmit={this.onSubmit.bind(this)}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_name\" ref=\"pt_name\" placeholder=\"John Doe\" id=\"pt_name\" type=\"text\" className=\"validate\" />\n                            <label style={{ color: \"black\", fontWeight: 'bold' }} className=\"active\" htmlFor=\"pt_name\">Name</label>\n                        </div>\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_email\" ref=\"pt_email\" placeholder=\"john.doe@test.com\" id=\"pt_email\" type=\"text\" className=\"validate\" />\n                            <label style={{ color: \"black\", fontWeight: 'bold' }} className=\"active\" htmlFor=\"pt_email\">Email</label>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_cell\" ref=\"pt_cell\" placeholder=\"346-252-3365\" id=\"pt_cell\" type=\"text\" className=\"validate\" />\n                            <label style={{ color: \"black\", fontWeight: 'bold' }} className=\"active\" htmlFor=\"pt_cell\">Cell</label>\n                            <span className=\"helper-text\">Cell number must be in XXX-XXX-XXXX format</span>\n                        </div>\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_gender\" ref=\"pt_gender\" placeholder=\"Male\" id=\"pt_gender\" type=\"text\" className=\"validate\" />\n                            <label style={{ color: \"black\", fontWeight: 'bold' }} className=\"active\" htmlFor=\"pt_gender\">Gender</label>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_dob\" ref=\"pt_dob\" placeholder=\"1994-01-01\" id=\"pt_dob\" type=\"text\" className=\"validate\" />\n                            <label style={{ color: \"black\", fontWeight: 'bold' }} className=\"active\" htmlFor=\"pt_dob\">Date of Birth</label>\n                            <span className=\"helper-text\">Date must be in YYYY-MM-DD format</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" value=\"Save\" name=\"action\">Add Patient</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddPatient;"]},"metadata":{},"sourceType":"module"}