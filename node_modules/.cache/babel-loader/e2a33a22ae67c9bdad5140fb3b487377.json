{"ast":null,"code":"var _jsxFileName = \"/Users/fatihersoy/Desktop/electroScribe/src/components/Patients/EditPatient.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass EditPatient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pt_name: '',\n      pt_email: '',\n      pt_cell: '',\n      pt_gender: '',\n      pt_dob: '',\n      id: '' // Bind \"this\" to the handleInputChange method\n\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.getPatientDetails();\n  } // Create a new method getPatientDetails to make an axios request to retrieve details of just ONE patient by pt_uuid\n\n\n  getPatientDetails() {\n    let id = this.props.match.params.id;\n    axios.get(\"http://localhost:3000/api/patients/\".concat(id)).then(response => {\n      // Set state to the response that was fetched\n      this.setState({\n        pt_name: response.data.pt_name,\n        pt_email: response.data.pt_email,\n        pt_cell: response.data.pt_cell,\n        pt_gender: response.data.pt_gender,\n        pt_dob: response.data.pt_dob\n      }, () => {\n        console.log(this.state);\n      });\n    }).catch(err => console.log(err));\n  }\n\n  editPatient(newPatient) {\n    //console.log(newPatient)\n    // Making a PUT request thru axios\n    axios.request({\n      method: 'PUT',\n      url: \"http://localhost:3000/api/patients/\".concat(this.state.id),\n      data: newPatient\n    }).then(response => {\n      // Redirecting to patients page\n      this.props.history.push('/patients');\n    }).catch(err => console.log(err));\n  } // Creating an onSubmit method that takes in \"e\" or event which is the input from the form and stores it in newPatient object. \n\n\n  onSubmit(e) {\n    //console.log(this.refs.name.value);\n    // Making sure to create an array of object [{}] since this is the format the API accepts UPDATE requests\n    const newPatient = [{\n      pt_name: this.refs.pt_name.value,\n      pt_email: this.refs.pt_email.value,\n      pt_cell: this.refs.pt_cell.value,\n      pt_gender: this.refs.pt_gender.value,\n      pt_dob: this.refs.pt_dob.value\n    }]; // Adds the newPatient object using the addPatient method created above. \n\n    this.editPatient(newPatient);\n    e.preventDefault();\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"btn grey\",\n      to: \"/patients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Edit Patient\"), React.createElement(\"form\", {\n      className: \"col s12\",\n      onSubmit: this.onSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_name\",\n      ref: \"pt_name\",\n      placeholder: \"John Doe\",\n      id: \"pt_name\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.pt_name,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"pt_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Name\")), React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_email\",\n      ref: \"pt_email\",\n      placeholder: \"john.doe@test.com\",\n      id: \"pt_email\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.pt_email,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"pt_email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Email\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_cell\",\n      ref: \"pt_cell\",\n      placeholder: \"346-252-3365\",\n      id: \"pt_cell\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.pt_cell,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"pt_cell\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Cell\"), React.createElement(\"span\", {\n      className: \"helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Cell number must be in XXX-XXX-XXXX format\")), React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_gender\",\n      ref: \"pt_gender\",\n      placeholder: \"Male\",\n      id: \"pt_gender\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.pt_gender,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"pt_gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Gender\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"pt_dob\",\n      ref: \"pt_dob\",\n      placeholder: \"1994-01-01\",\n      id: \"pt_dob\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.pt_dob,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"active\",\n      htmlFor: \"pt_dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Date of Birth\"), React.createElement(\"span\", {\n      className: \"helper-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Date must be in YYYY-MM-DD format\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn waves-effect waves-light\",\n      type: \"submit\",\n      value: \"Save\",\n      name: \"action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Save Patient Details\"))));\n  }\n\n}\n\nexport default EditPatient;","map":{"version":3,"sources":["/Users/fatihersoy/Desktop/electroScribe/src/components/Patients/EditPatient.js"],"names":["React","Component","Link","axios","EditPatient","constructor","props","state","pt_name","pt_email","pt_cell","pt_gender","pt_dob","id","handleInputChange","bind","componentWillMount","getPatientDetails","match","params","get","then","response","setState","data","console","log","catch","err","editPatient","newPatient","request","method","url","history","push","onSubmit","e","refs","value","preventDefault","target","name","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass EditPatient extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pt_name: '',\n            pt_email: '',\n            pt_cell: '',\n            pt_gender: '',\n            pt_dob: '',\n            id: ''\n        }\n\n        // Bind \"this\" to the handleInputChange method\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentWillMount(){\n        this.getPatientDetails();\n    }\n\n    // Create a new method getPatientDetails to make an axios request to retrieve details of just ONE patient by pt_uuid\n    getPatientDetails() {\n        let id = this.props.match.params.id;\n        axios.get(`http://localhost:3000/api/patients/${id}`)\n            .then(response => {\n                // Set state to the response that was fetched\n                this.setState({\n                    pt_name: response.data.pt_name,\n                    pt_email: response.data.pt_email,\n                    pt_cell: response.data.pt_cell,\n                    pt_gender: response.data.pt_gender,\n                    pt_dob: response.data.pt_dob\n                }, () => {\n                    console.log(this.state)\n                });\n            })\n            .catch(err => console.log(err))\n    }    \n\n    editPatient(newPatient){\n        //console.log(newPatient)\n        // Making a PUT request thru axios\n        axios.request({\n            method: 'PUT',\n            url: `http://localhost:3000/api/patients/${this.state.id}`,\n            data: newPatient\n        }).then(response => {\n            // Redirecting to patients page\n            this.props.history.push('/patients');\n        }).catch(err => console.log(err));        \n    }\n\n    // Creating an onSubmit method that takes in \"e\" or event which is the input from the form and stores it in newPatient object. \n    onSubmit(e){\n        //console.log(this.refs.name.value);\n        // Making sure to create an array of object [{}] since this is the format the API accepts UPDATE requests\n        const newPatient = [{\n            pt_name: this.refs.pt_name.value,\n            pt_email: this.refs.pt_email.value,\n            pt_cell:  this.refs.pt_cell.value,\n            pt_gender: this.refs.pt_gender.value,\n            pt_dob: this.refs.pt_dob.value \n        }]\n        // Adds the newPatient object using the addPatient method created above. \n        this.editPatient(newPatient);\n        e.preventDefault();\n    }\n\n    handleInputChange(e){\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render(){\n        return(\n            <div>\n                <br />\n                <Link className=\"btn grey\" to=\"/patients\">Back</Link>                \n                <h1>Edit Patient</h1>\n                <form className=\"col s12\" onSubmit={this.onSubmit.bind(this)}>        \n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_name\" ref=\"pt_name\" placeholder=\"John Doe\" id=\"pt_name\" type=\"text\" className=\"validate\" value={this.state.pt_name} onChange={this.handleInputChange} />\n                            <label className=\"active\" htmlFor=\"pt_name\">Name</label>\n                        </div>\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_email\" ref=\"pt_email\" placeholder=\"john.doe@test.com\" id=\"pt_email\" type=\"text\" className=\"validate\" value={this.state.pt_email} onChange={this.handleInputChange}  />\n                            <label className=\"active\"  htmlFor=\"pt_email\">Email</label>\n                        </div>                        \n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_cell\" ref=\"pt_cell\" placeholder=\"346-252-3365\" id=\"pt_cell\" type=\"text\" className=\"validate\" value={this.state.pt_cell} onChange={this.handleInputChange}  />\n                            <label className=\"active\"  htmlFor=\"pt_cell\">Cell</label>\n                            <span className=\"helper-text\">Cell number must be in XXX-XXX-XXXX format</span>\n                        </div>\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_gender\" ref=\"pt_gender\" placeholder=\"Male\" id=\"pt_gender\" type=\"text\" className=\"validate\" value={this.state.pt_gender} onChange={this.handleInputChange}  />\n                            <label className=\"active\"  htmlFor=\"pt_gender\">Gender</label>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input name=\"pt_dob\" ref=\"pt_dob\" placeholder=\"1994-01-01\" id=\"pt_dob\" type=\"text\" className=\"validate\" value={this.state.pt_dob} onChange={this.handleInputChange} />\n                            <label className=\"active\"  htmlFor=\"pt_dob\">Date of Birth</label>\n                            <span className=\"helper-text\">Date must be in YYYY-MM-DD format</span>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <button className=\"btn waves-effect waves-light\" type=\"submit\" value=\"Save\" name=\"action\">Save Patient Details</button> \n                    </div>                                                                                                    \n                </form>\n            </div>\n        )\n    }\n}\n\nexport default EditPatient;"]},"metadata":{},"sourceType":"module"}